//1.创建一个数组
//2.检测数组可用单元的多少
//3.获得数组中某个单元指针
//*4.数组增长
//5.数组free释放
/*
条件指示符#ifndef的最主要目的是防止头文件的重复包含和编译。
语句1 #ifndef 标识1
语句2 #define 标识1
语句3 #endif         //ifndef和endif成对存在
语句4 ……
语句5 ……
该段代码意思是:如果标识1没有被定义，则重定义标识1，即执行语句2、语句3;如果标识1已经被定义，则直接跳过语句2、语句3，直接执行语句4、语句5、……

当要编写头文件a.h
在头文件开头写上两行:
#ifndef _A_H
#define _A_H//一般是文件名的大写
・・・・・・
#endif
*/
#ifndef _C27RESIZABLEARRAY_H
#define _C27RESIZABLEARRAY_H
//======================================================================================================================================================================================================
/*可变数组*/
typedef struct{
    int *array;
    int size;
}Array;
Array ResArr_creat(int init_size);
int ResArr_size(const Array *arr);
int *ResArr_at(Array *arr,int index);
void array_inflate(Array *arr,int more_size);
void ResArr_free(Array *arr);
//======================================================================================================================================================================================================
/*链表*/
typedef struct _node{
    int value;//存储数据,可以是结构体，数组等
    struct _node *next;//存储下一个结点的value的指针
}NODE;






//======================================================================================================================================================================================================

#endif